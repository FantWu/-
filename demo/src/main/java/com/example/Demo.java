package com.example;

import net.mamoe.mirai.console.plugin.jvm.JavaPlugin;
import net.mamoe.mirai.console.plugin.jvm.JvmPluginDescriptionBuilder;
import net.mamoe.mirai.event.GlobalEventChannel;
import net.mamoe.mirai.event.events.FriendMessageEvent;
import net.mamoe.mirai.event.events.GroupMessageEvent;

public final class Demo extends JavaPlugin {
    public static final Demo INSTANCE = new Demo();

    private Demo() {
        super(new JvmPluginDescriptionBuilder("com.example.demo", "0.1.0")
                .name("Demo")
                .author("fantwu")
                .build());
    }

    @Override
    public void onEnable() {
        getLogger().info("Hello World!");

        GlobalEventChannel.INSTANCE.subscribeAlways(GroupMessageEvent.class, g -> {

            //监听群消息
            //getLogger().info("哟西，监听到以下群消息：");
            //getLogger().info(g.getMessage().contentToString());

            //g.getGroup().sendMessage(g.getMessage().contentToString());

            String message_s = g.getMessage().contentToString();
            String score_s;
            String search;

            if (message_s.startsWith("物理")){
                score_s = message_s.substring(2);
                int score = Integer.parseInt(score_s);
                if (score > 635){
                    g.getGroup().sendMessage("分数过高，建议参考更高等级的院校。");
                }else if (score < 600){
                    g.getGroup().sendMessage("被吉林大学录取概率不大，建议了解其他院校");
                }else{
                    int range = getRangePhysics(score);
                    g.getGroup().sendMessage(
                                    "【物理类】 " + score + "分 "
                                    + "估计排名：" + range + "\n"
                                    + "推荐专业：\n" + getSuggestionPhysics(range)
                    );
                }
            }else if (message_s.startsWith("历史")){
                score_s = message_s.substring(2);
                int score = Integer.parseInt(score_s);
                if (score > 608){
                    g.getGroup().sendMessage("分数过高，建议参考更高等级的院校。");
                }else if (score < 588){
                    g.getGroup().sendMessage("被吉林大学录取概率不大，建议了解其他院校");
                }else{
                    int range = getRangeHistory(score);
                    g.getGroup().sendMessage(
                                    "【历史类】 " + score + "分 "
                                    + "估计排名：" + range + "\n"
                                    + "推荐专业：\n" + getSuggestionHistory(range)
                    );
                }
            }else if (message_s.startsWith("搜索 ")){
                search = message_s.substring(3);
                g.getGroup().sendMessage(
                        search + " 的搜索结果：\n"
                        + SearchPros(search)
                );
            }
        });

        GlobalEventChannel.INSTANCE.subscribeAlways(FriendMessageEvent.class, f -> {

            //监听好友消息
            getLogger().info("哟西，监听到以下私聊消息：");
            getLogger().info(f.getMessage().contentToString());

            //f.getFriend().sendMessage(f.getMessage().contentToString());
        });


    }

    //获取物理类排名
    public int getRangePhysics(int score){
        int Range = 0;
        int[][] PhysicsRangeData = {
                {600, 22072},
                {601, 21338},
                {602, 20686},
                {603, 20040},
                {604, 19372},
                {605, 18724},
                {606, 18092},
                {607, 17472},
                {608, 16821},
                {609, 16235},
                {610, 15634},
                {611, 15055},
                {612, 14543},
                {613, 14015},
                {614, 13481},
                {615, 12968},
                {616, 12453},
                {617, 11972},
                {618, 11488},
                {619, 11055},
                {620, 10637},
                {621, 10208},
                {622, 9755},
                {623, 9363},
                {624, 8949},
                {625, 8565},
                {626, 8188},
                {627, 7833},
                {628, 7467},
                {629, 7118},
                {630, 6803},
                {631, 6460},
                {632, 6136},
                {633, 5830},
                {634, 5564},
                {635, 5280}
        };
        for (int x = 0; x <= 35; x++){
            if (PhysicsRangeData[x][0] == score){
                Range = PhysicsRangeData[x][1];
            }
        }
        return Range;
    }

    //获取历史类排名
    public int getRangeHistory(int score){
        int Range = 0;
        int[][] HistoryRangeData = {
                {588, 3066},
                {589, 2929},
                {590, 2779},
                {591, 2659},
                {592, 2520},
                {593, 2388},
                {594, 2277},
                {595, 2168},
                {596, 2075},
                {597, 1981},
                {598, 1881},
                {599, 1785},
                {600, 1678},
                {601, 1577},
                {602, 1504},
                {603, 1423},
                {604, 1326},
                {605, 1264},
                {606, 1184},
                {607, 1119},
                {608, 1053}
        };
        for (int x = 0; x <= 20; x++){
            if (HistoryRangeData[x][0] == score){
                Range = HistoryRangeData[x][1];
            }
        }
        return Range;
    }

    //获取物理类专业建议
    public String getSuggestionPhysics(int Range){
        String[][] pros = {
                {"临床医学（非定向）（招生特征不招色盲色弱；办学地点：前卫南区）（白求恩第一临床医学院）", "6359"},
                {"临床医学（非定向）（招生特征不招色盲色弱；办学地点：前卫南区）（白求恩第二临床医学院）", "7963"},
                {"临床医学（非定向）（招生特征不招色盲色弱；办学地点：前卫南区）（白求恩第三临床医学院）", "8314"},
                {"考古学（非定向）（招生特征不招色盲色弱；办学地点：前卫南区）（含考古学、文物与博物馆学专业）", "8649"},
                {"临床医学（非定向）（办学地点：前卫南区）（白求恩第一临床医学院）", "9813"},
                {"计算机类（非定向）（080901.计算机科学与技术+080905.物联网工程+080911.网络空间安全）（招生特征不招单色识别不全者；办学地点：前卫南区）（请非英语语种的考生慎重报考）", "10616"},
                {"法学（非定向）（办学地点：前卫南区）", "11023"},
                {"临床医学（非定向）（办学地点：前卫南区）（白求恩第二临床医学院）", "11023"},
                {"临床医学（非定向）（办学地点：前卫南区）（白求恩第三临床医学院）", "11023"},
                {"政治学与行政学（非定向）（办学地点：前卫南区）（含政治学与行政学、国际政治、行政管理专业）", "11473"},
                {"软件工程（非定向）（只录取有专业志愿考生）（招生特征不招单色识别不全者；办学地点：前卫南区）（请非英语语种的考生慎重报考，第三、四学年学费14000元/学年）", "11919"},
                {"放射医学（非定向）（办学地点：前卫南区）", "11919"},
                {"西班牙语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）（零起点）", "12381"},
                {"食品科学与工程类（非定向）（082701.食品科学与工程+082702.食品质量与安全）（招生特征不招色盲色弱；办学地点：前卫南区）", "12381"},
                {"电子信息类（非定向）（080701.电子信息工程+080702.电子科学与技术+080704.微电子科学与工程+080714.电子信息科学与技术+082601.生物医学工程）（办学地点：前卫南区）", "13336"},
                {"自动化类（非定向）（080801.自动化+080803.机器人工程）（办学地点：南岭校区）", "13827"},
                {"新闻传播学类（非定向）（050301.新闻学+050303.广告学）（办学地点：前卫南区）", "14335"},
                {"通信工程（非定向）（办学地点：南湖校区）（含通信工程、信息工程、空间信息与数字技术专业）", "14335"},
                {"数学类（非定向）（070101.数学与应用数学+070102.信息与计算科学+020305.金融数学+071201.统计学）（办学地点：前卫南区）", "14335"},
                {"生物工程类（非定向）（083001.生物工程+083002.生物制药+100702.药物制剂）（办学地点：前卫南区）", "14335"},
                {"外交学（非定向）（办学地点：前卫南区）（请非英语语种的考生慎重报考）", "14870"},
                {"物理学类（非定向）（070201.物理学+070202.应用物理学+070203.核物理+080705.光电信息科学与工程）（办学地点：前卫南区）", "14870"},
                {"生物科学类（非定向）（071001.生物科学+071002.生物技术）（办学地点：前卫南区）", "14870"},
                {"经济学类（非定向）（020101.经济学+020201.财政学+020401.国际经济与贸易+020301.金融学）（招生特征不招单色识别不全者；办学地点：前卫南区）", "15382"},
                {"车辆工程（非定向）（办学地点：南岭校区）", "15918"},
                {"口腔医学（非定向）（办学地点：前卫南区）", "15918"},
                {"俄语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）（零起点）", "16472"},
                {"思想政治教育（非定向）（办学地点：前卫南区）", "16472"},
                {"英语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）", "16472"},
                {"仪器类（非定向）（080301.测控技术与仪器+080601.电气工程及其自动化+080303.智能感知工程）（办学地点：前卫南区）", "16472"},
                {"机械类（非定向）（080201.机械工程+120701.工业工程+080102.工程力学+080213.智能制造工程）（办学地点：南岭校区）", "16472"},
                {"地质类（非定向）（070901.地质学+081403.资源勘查工程+120404.土地资源管理）（招生特征不招单色识别不全者；办学地点：前卫南区）", "16472"},
                {"日语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）（零起点）", "17045"},
                {"化学类（非定向）（070301.化学+070302.应用化学+080403.材料化学+080407.高分子材料与工程+081301.化学工程与工艺）（办学地点：前卫南区）", "17045"},
                {"材料类（非定向）（080401.材料科学与工程+080406.无机非金属材料工程+080203.材料成型及控制工程）（办学地点：南岭校区）", "18160"},
                {"工商管理类（非定向）（120201.工商管理+120202.市场营销+120206.人力资源管理+120102.信息管理与信息系统）（招生特征不招单色识别不全者；办学地点：前卫南区）", "18160"},
                {"会计学（非定向）（招生特征不招单色识别不全者；办学地点：前卫南区）（含会计学、财务管理、信用管理、经济学专业）", "18160"},
                {"交通运输类（非定向）（081801.交通运输+081802.交通工程+080208.汽车服务工程+081006.道路桥梁与渡河工程+120602.物流工程）（办学地点：南岭校区）", "18160"},
                {"勘查技术与工程（非定向）（办学地点：前卫南区）（含勘查技术与工程、地理信息科学、地球物理学、测绘工程专业）", "18160"},
                {"临床药学（非定向）（办学地点：前卫南区）", "18160"},
                {"工业设计（非定向）（办学地点：南岭校区）", "18160"},
                {"土木类（非定向）（081001.土木工程+081401.地质工程）（办学地点：前卫南区）", "18762"},
                {"环境科学与工程类（非定向）（082503.环境科学+082502.环境工程）（办学地点：前卫南区）", "19403"}
        };
        int tempRange = 0;
        int count = 0;
        String answer = "";
        int minus = 0;
        for (int x = 0; x <= 42; x++){
            tempRange = Integer.parseInt(pros[x][1]);
            if (Math.abs(tempRange - Range) < 1500){
                count++;
                getLogger().info("(" + count + ")" + " tempRange=" + tempRange + " Range=" + Range + " abs=" + Math.abs(tempRange- Range));
                answer = answer  +"(" + count + ")" +   pros[x][0] + "\n" + "21年排名：" + pros[x][1] + "\n";
            }
        }
        answer = answer + "找到" + count + "条结果";
        return answer;
    }

    //获取历史类专业建议
    public String getSuggestionHistory(int Range){
        String[][] pros = {
                {"考古学（非定向）（招生特征不招色盲色弱；办学地点：前卫南区）（含考古学、文物与博物馆学专业）", "1453"},
                {"法学（非定向）（办学地点：前卫南区）", "1548"},
                {"新闻传播学类（非定向）（050301.新闻学+050303.广告学）（办学地点：前卫南区）", "1548"},
                {"经济学类（非定向）（020101.经济学+020201.财政学+020401.国际经济与贸易+020301.金融学）（办学地点：前卫南区）", "1748"},
                {"外交学（非定向）（办学地点：前卫南区）（请非英语语种的考生慎重报考）", "1916"},
                {"人文科学试验班（非定向）（050101.汉语言文学+060101.历史学）（办学地点：前卫南区）", "2031"},
                {"政治学与行政学（非定向）（办学地点：前卫南区）（含政治学与行政学、国际政治、行政管理专业）", "2031"},
                {"历史学（非定向）（办学地点：前卫南区）", "2144"},
                {"思想政治教育（非定向）（办学地点：前卫南区）", "2144"},
                {"英语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）", "2273"},
                {"西班牙语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）（零起点）", "2385"},
                {"俄语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）（零起点）", "2519"},
                {"日语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）（零起点）", "2519"}
        };
        int tempRange = 0;
        int count = 0;
        String answer = "";
        int minus = 0;
        for (int x = 0; x <= 12; x++){
            tempRange = Integer.parseInt(pros[x][1]);
            if (Math.abs(tempRange - Range) < 500){
                count++;
                getLogger().info("(" + count + ")" + " tempRange=" + tempRange + " Range=" + Range + " abs=" + Math.abs(tempRange- Range));
                answer = answer + "(" + count + ")" + pros[x][0] + "\n" + "21年排名：" + pros[x][1] + "\n";
            }
        }
        answer = answer + "找到" + count + "条结果";
        return answer;
    }

    //搜索专业
    public String SearchPros(String search){
        String[][] ProsPhysics = {
                {"临床医学（非定向）（招生特征不招色盲色弱；办学地点：前卫南区）（白求恩第一临床医学院）", "6359"},
                {"临床医学（非定向）（招生特征不招色盲色弱；办学地点：前卫南区）（白求恩第二临床医学院）", "7963"},
                {"临床医学（非定向）（招生特征不招色盲色弱；办学地点：前卫南区）（白求恩第三临床医学院）", "8314"},
                {"考古学（非定向）（招生特征不招色盲色弱；办学地点：前卫南区）（含考古学、文物与博物馆学专业）", "8649"},
                {"临床医学（非定向）（办学地点：前卫南区）（白求恩第一临床医学院）", "9813"},
                {"计算机类（非定向）（080901.计算机科学与技术+080905.物联网工程+080911.网络空间安全）（招生特征不招单色识别不全者；办学地点：前卫南区）（请非英语语种的考生慎重报考）", "10616"},
                {"法学（非定向）（办学地点：前卫南区）", "11023"},
                {"临床医学（非定向）（办学地点：前卫南区）（白求恩第二临床医学院）", "11023"},
                {"临床医学（非定向）（办学地点：前卫南区）（白求恩第三临床医学院）", "11023"},
                {"政治学与行政学（非定向）（办学地点：前卫南区）（含政治学与行政学、国际政治、行政管理专业）", "11473"},
                {"软件工程（非定向）（只录取有专业志愿考生）（招生特征不招单色识别不全者；办学地点：前卫南区）（请非英语语种的考生慎重报考，第三、四学年学费14000元/学年）", "11919"},
                {"放射医学（非定向）（办学地点：前卫南区）", "11919"},
                {"西班牙语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）（零起点）", "12381"},
                {"食品科学与工程类（非定向）（082701.食品科学与工程+082702.食品质量与安全）（招生特征不招色盲色弱；办学地点：前卫南区）", "12381"},
                {"电子信息类（非定向）（080701.电子信息工程+080702.电子科学与技术+080704.微电子科学与工程+080714.电子信息科学与技术+082601.生物医学工程）（办学地点：前卫南区）", "13336"},
                {"自动化类（非定向）（080801.自动化+080803.机器人工程）（办学地点：南岭校区）", "13827"},
                {"新闻传播学类（非定向）（050301.新闻学+050303.广告学）（办学地点：前卫南区）", "14335"},
                {"通信工程（非定向）（办学地点：南湖校区）（含通信工程、信息工程、空间信息与数字技术专业）", "14335"},
                {"数学类（非定向）（070101.数学与应用数学+070102.信息与计算科学+020305.金融数学+071201.统计学）（办学地点：前卫南区）", "14335"},
                {"生物工程类（非定向）（083001.生物工程+083002.生物制药+100702.药物制剂）（办学地点：前卫南区）", "14335"},
                {"外交学（非定向）（办学地点：前卫南区）（请非英语语种的考生慎重报考）", "14870"},
                {"物理学类（非定向）（070201.物理学+070202.应用物理学+070203.核物理+080705.光电信息科学与工程）（办学地点：前卫南区）", "14870"},
                {"生物科学类（非定向）（071001.生物科学+071002.生物技术）（办学地点：前卫南区）", "14870"},
                {"经济学类（非定向）（020101.经济学+020201.财政学+020401.国际经济与贸易+020301.金融学）（招生特征不招单色识别不全者；办学地点：前卫南区）", "15382"},
                {"车辆工程（非定向）（办学地点：南岭校区）", "15918"},
                {"口腔医学（非定向）（办学地点：前卫南区）", "15918"},
                {"俄语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）（零起点）", "16472"},
                {"思想政治教育（非定向）（办学地点：前卫南区）", "16472"},
                {"英语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）", "16472"},
                {"仪器类（非定向）（080301.测控技术与仪器+080601.电气工程及其自动化+080303.智能感知工程）（办学地点：前卫南区）", "16472"},
                {"机械类（非定向）（080201.机械工程+120701.工业工程+080102.工程力学+080213.智能制造工程）（办学地点：南岭校区）", "16472"},
                {"地质类（非定向）（070901.地质学+081403.资源勘查工程+120404.土地资源管理）（招生特征不招单色识别不全者；办学地点：前卫南区）", "16472"},
                {"日语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）（零起点）", "17045"},
                {"化学类（非定向）（070301.化学+070302.应用化学+080403.材料化学+080407.高分子材料与工程+081301.化学工程与工艺）（办学地点：前卫南区）", "17045"},
                {"材料类（非定向）（080401.材料科学与工程+080406.无机非金属材料工程+080203.材料成型及控制工程）（办学地点：南岭校区）", "18160"},
                {"工商管理类（非定向）（120201.工商管理+120202.市场营销+120206.人力资源管理+120102.信息管理与信息系统）（招生特征不招单色识别不全者；办学地点：前卫南区）", "18160"},
                {"会计学（非定向）（招生特征不招单色识别不全者；办学地点：前卫南区）（含会计学、财务管理、信用管理、经济学专业）", "18160"},
                {"交通运输类（非定向）（081801.交通运输+081802.交通工程+080208.汽车服务工程+081006.道路桥梁与渡河工程+120602.物流工程）（办学地点：南岭校区）", "18160"},
                {"勘查技术与工程（非定向）（办学地点：前卫南区）（含勘查技术与工程、地理信息科学、地球物理学、测绘工程专业）", "18160"},
                {"临床药学（非定向）（办学地点：前卫南区）", "18160"},
                {"工业设计（非定向）（办学地点：南岭校区）", "18160"},
                {"土木类（非定向）（081001.土木工程+081401.地质工程）（办学地点：前卫南区）", "18762"},
                {"环境科学与工程类（非定向）（082503.环境科学+082502.环境工程）（办学地点：前卫南区）", "19403"}
        };
        String[][] ProsHistory = {
                {"考古学（非定向）（招生特征不招色盲色弱；办学地点：前卫南区）（含考古学、文物与博物馆学专业）", "1453"},
                {"法学（非定向）（办学地点：前卫南区）", "1548"},
                {"新闻传播学类（非定向）（050301.新闻学+050303.广告学）（办学地点：前卫南区）", "1548"},
                {"经济学类（非定向）（020101.经济学+020201.财政学+020401.国际经济与贸易+020301.金融学）（办学地点：前卫南区）", "1748"},
                {"外交学（非定向）（办学地点：前卫南区）（请非英语语种的考生慎重报考）", "1916"},
                {"人文科学试验班（非定向）（050101.汉语言文学+060101.历史学）（办学地点：前卫南区）", "2031"},
                {"政治学与行政学（非定向）（办学地点：前卫南区）（含政治学与行政学、国际政治、行政管理专业）", "2031"},
                {"历史学（非定向）（办学地点：前卫南区）", "2144"},
                {"思想政治教育（非定向）（办学地点：前卫南区）", "2144"},
                {"英语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）", "2273"},
                {"西班牙语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）（零起点）", "2385"},
                {"俄语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）（零起点）", "2519"},
                {"日语（非定向）（外语语种英语；办学地点：前卫南区）（语种要求:英语）（零起点）", "2519"}
        };
        int count = 0;
        String answer = "";
        for (int x = 0; x < 42; x++){
            if (ProsPhysics[x][0].contains(search)){
                count++;
                answer = answer + "【物理类】" + ProsPhysics[x][0] + "\n21年排名：" + ProsPhysics[x][1] + "\n";
            }
        }
        for (int x = 0; x < 12; x++){
            if (ProsHistory[x][0].contains(search)){
                count++;
                answer = answer + "【历史类】" + ProsHistory[x][0] + "\n21年排名：" + ProsHistory[x][1] + "\n";
            }
        }
        answer = answer + "找到" + count + "条结果";
        return answer;
    }

}